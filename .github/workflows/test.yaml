name: Test 

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: read

jobs:
  test-sqlite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.2', '8.3', '8.4']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: bcmath, curl, gd, mbstring, mysql, openssl, pdo, tokenizer, xml, zip
          tools: composer:v2
          coverage: none

      - name: Cache Composer Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Create Database
        run: touch database/database.sqlite
      
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
        
      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
        
      - name: Generate Application Key
        run: php artisan key:generate --force

      - name: Build Assets
        run: |
          npm install
          npm run build

      - name: Run Tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test

  test-mariadb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.2', '8.3', '8.4']
        mariadb: ['11', '12']
    
    services:
      mariadb:
        image: mariadb:${{ matrix.mariadb }}
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: paymenter_test
        ports:
          - 3306:3306
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: bcmath, curl, gd, mbstring, mysql, openssl, pdo, tokenizer, xml, zip
          tools: composer:v2
          coverage: none

      - name: Cache Composer Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
        
      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
        
      - name: Generate Application Key
        run: php artisan key:generate --force

      - name: Build Assets
        run: |
          npm install
          npm run build

      - name: Run Tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: paymenter_test
          DB_USERNAME: root
          DB_PASSWORD: password
        run: php artisan test